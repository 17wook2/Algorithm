from collections import dequeimport mathr,c = list(map(int,input().split()))hx,hy = list(map(int,input().split()))ex,ey = list(map(int,input().split()))arr = []hx -= 1; hy -= 1; ex -= 1; ey -=1;dx = [-1,0,1,0]dy = [0,1,0,-1]for i in range(r):    arr.append(list(map(int,input().split())))visited = [[[math.inf]*2 for i in range(c)] for i in range(r)]visited[hx][hy][0] = 0def bfs():    q = deque()    q.append((hx,hy,0))    while q:        x,y,cnt = q.popleft()        for i in range(4):            nx = x + dx[i]            ny = y + dy[i]            if 0 <= nx < r and 0 <= ny < c:                if arr[nx][ny] == 0:                    if visited[nx][ny][cnt] <= visited[x][y][cnt] + 1: continue                    visited[nx][ny][cnt] = visited[x][y][cnt] + 1                    q.append((nx,ny,cnt))                else:                    if cnt >= 1: continue                    if visited[nx][ny][cnt+1] <= visited[x][y][cnt] + 1:continue                    visited[nx][ny][cnt+1] = visited[x][y][cnt] + 1                    q.append((nx,ny,cnt+1))bfs()ans = min(visited[ex][ey])if ans == math.inf:    print(-1)else:    print(ans)